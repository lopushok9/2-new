<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>What Bird</title>
    <link rel="icon" type="image/png" href="/assets/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/assets/favicon.svg" />
    <link rel="shortcut icon" href="/assets/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png" />
    <link rel="manifest" href="/assets/site.webmanifest" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', system-ui, sans-serif;
            background-color: white;
            min-height: 100vh;
        }

        .header {
            background-color: #1a472a;
            width: 100%;
            padding: 20px 0;
            position: relative;
            z-index: 10;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: white;
        }

        .logo {
            font-size: 28px;
            font-weight: 600;
            letter-spacing: 0.7px;
        }

        .nav-links {
            display: flex;
            gap: 30px;
            letter-spacing: 0.7px;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-size: 16px;
            font-weight: 400;
            font-family: "SF Pro Display";
            transition: opacity 0.3s ease;
        }

        .nav-links a:hover {
            opacity: 0.8;
        }

        .main-content {
            display: flex;
            min-height: calc(100vh - 80px);
            align-items: center;
        }

        .left-section {
            flex: 1;
            padding: 60px 40px 60px 80px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .right-section {
            flex: 1;
            height: calc(100vh - 80px);
            position: relative;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .hero-title {
            font-size: 4.5rem;
            font-weight: 700;
            color: #1a472a;
            line-height: 1.1;
            margin-bottom: 30px;
            letter-spacing: -0.02em;
            background: linear-gradient(135deg, #1a472a 0%, #2d5a3d 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .hero-subtitle {
            font-size: 1.25rem;
            color: #666;
            line-height: 1.6;
            margin-bottom: 40px;
            font-weight: 400;
            max-width: 500px;
        }

        .cta-button {
            background: linear-gradient(135deg, #1a472a 0%, #2d5a3d 100%);
            color: white;
            border: none;
            padding: 16px 32px;
            font-size: 1.1rem;
            font-weight: 500;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: fit-content;
            font-family: inherit;
            box-shadow: 0 4px 15px rgba(26, 71, 42, 0.2);
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(26, 71, 42, 0.3);
        }

        .cta-button:active {
            transform: translateY(0);
        }

        /* --- СТИЛИ ДЛЯ СТОПКИ ФОТО (обновлено для мобильной совместимости) --- */
        .slider {
            position: relative;
            width: 80%;
            height: 80%;
            perspective: 1500px;
            -webkit-perspective: 1500px;
            transform-style: preserve-3d;
            -webkit-transform-style: preserve-3d;
        }

        .slide {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 20px;
            object-fit: cover;
            object-position: center;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);

            /* hardware hint */
            will-change: transform, opacity;
            backface-visibility: hidden;
            -webkit-backface-visibility: hidden;

            /* универсальные переходы (с -webkit- префиксом для старых мобильных) */
            transition: transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, filter 900ms ease;
            -webkit-transition: -webkit-transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, -webkit-filter 900ms ease;
        }

        /* fallback-начальные позиции если JS не запущен */
        .slide:nth-child(1) { transform: translate3d(0,0,0) scale(1) rotateY(0) rotateX(0); z-index: 5; filter: blur(0); opacity: 1; }
        .slide:nth-child(2) { transform: translate3d(-30px,-30px,0) scale(0.94) rotateY(-4deg) rotateX(3deg); z-index: 4; opacity: 0.9; filter: blur(2px); }
        .slide:nth-child(3) { transform: translate3d(-60px,-60px,0) scale(0.88) rotateY(-6deg) rotateX(4deg); z-index: 3; opacity: 0.8; filter: blur(4px); }
        .slide:nth-child(4) { transform: translate3d(-90px,-90px,0) scale(0.82) rotateY(-8deg) rotateX(5deg); z-index: 2; opacity: 0.7; filter: blur(6px); }

        /* Для узких экранов немного уменьшаем blur и смещения (оптимизация производительности) */
        @media (max-width: 480px) {
            .slide {
                -webkit-filter: blur(0);
                filter: blur(0);
            }
            .slider {
                perspective: 900px;
                -webkit-perspective: 900px;
            }
        }

        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
                min-height: auto;
            }

            .left-section {
                padding: 40px 20px;
                text-align: center;
            }

            .right-section {
                height: 50vh;
                min-height: 400px;
            }

            .hero-title {
                font-size: 3rem;
            }

            .hero-subtitle {
                font-size: 1.1rem;
                max-width: none;
            }

            .nav-links {
                gap: 20px;
            }

            .nav-links a {
                font-size: 14px;
            }
        }

        @media (max-width: 480px) {
            .hero-title {
                font-size: 2.5rem;
            }
            
            .left-section {
                padding: 30px 15px;
            }

            .nav {
                flex-direction: column;
                gap: 15px;
            }

            .nav-links {
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container">
            <nav class="nav">
                <div class="logo">What bird</div>
                <div class="nav-links">
                    <a href="/">Chat</a>
                    <a href="/about">About</a>
                    <a href="/landing">Landing</a>
                </div>
            </nav>
        </div>
    </header>

    <main class="main-content">
        <section class="left-section">
            <h1 class="hero-title">Explore nature</h1>
            <p class="hero-subtitle">
                Discover the beauty of wildlife and natural landscapes. 
                Connect with nature through stunning photography and immersive experiences 
                powered by advanced AI technology.
            </p>
            <button class="cta-button" onclick="window.location.href='/'">Start Exploring</button>
        </section>
        
        <section class="right-section">
            <!-- СТОПКА ФОТО -->
            <div class="slider" aria-hidden="false">
                <img src="/assets/puffins.jpg" class="slide" alt="slide1">
                <img src="/assets/photo2.jpg" class="slide" alt="slide2">
                <img src="/assets/photo3.jpg" class="slide" alt="slide3">
                <img src="/assets/photo4.jpg" class="slide" alt="slide4">
            </div>
        </section>
    </main>

    <script>
        // Анимация текста и кнопки (не трогал)
        window.addEventListener('load', function() {
            const title = document.querySelector('.hero-title');
            const subtitle = document.querySelector('.hero-subtitle');
            const button = document.querySelector('.cta-button');
            
            title.style.opacity = '0';
            title.style.transform = 'translateY(30px)';
            subtitle.style.opacity = '0';
            subtitle.style.transform = 'translateY(30px)';
            button.style.opacity = '0';
            button.style.transform = 'translateY(30px)';
            
            setTimeout(() => {
                title.style.transition = 'all 0.8s ease';
                title.style.opacity = '1';
                title.style.transform = 'translateY(0)';
            }, 100);
            
            setTimeout(() => {
                subtitle.style.transition = 'all 0.8s ease';
                subtitle.style.opacity = '1';
                subtitle.style.transform = 'translateY(0)';
            }, 300);
            
            setTimeout(() => {
                button.style.transition = 'all 0.8s ease';
                button.style.opacity = '1';
                button.style.transform = 'translateY(0)';
            }, 500);
        });

        // -------------- АНИМАЦИЯ СТОПКИ (адаптирована под мобильные) ----------------
        const slider = document.querySelector('.slider');
        let slides = Array.from(document.querySelectorAll('.slide'));

        // Respect user's preference for reduced motion
        const reduceMotion = window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

        // Parameters (adjust if needed)
        const OFFSET_X = 30; // px per layer
        const OFFSET_Y = 30; // px per layer
        const SCALE_STEP = 0.06;
        const ROT_Y_STEP = 2; // deg per layer
        const ROT_X_STEP = 1; // deg per layer
        const BLUR_STEP = 2; // px per layer
        const OPACITY_STEP = 0.08;
        const TRANSITION = 'transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, filter 900ms ease';

        function applyStack() {
            slides.forEach((s, i) => {
                // Ensure transitions are set (some mobile browsers need -webkit- explicitly)
                s.style.transition = TRANSITION;
                s.style.webkitTransition = TRANSITION;
                s.style.zIndex = slides.length - i;

                if (i === 0) {
                    s.style.transform = 'translate3d(0px,0px,0px) scale(1) rotateY(0deg) rotateX(0deg)';
                    s.style.webkitTransform = 'translate3d(0px,0px,0px) scale(1) rotateY(0deg) rotateX(0deg)';
                    s.style.opacity = '1';
                    s.style.filter = 'blur(0px)';
                    s.style.webkitFilter = 'blur(0px)';
                } else {
                    const tx = -OFFSET_X * i;
                    const ty = -OFFSET_Y * i;
                    const scale = 1 - i * SCALE_STEP;
                    const ry = -ROT_Y_STEP * i;
                    const rx = ROT_X_STEP * i;
                    const blur = BLUR_STEP * i;
                    const opacity = Math.max(0, 1 - i * OPACITY_STEP);

                    const t = `translate3d(${tx}px, ${ty}px, 0px) scale(${scale}) rotateY(${ry}deg) rotateX(${rx}deg)`;
                    s.style.transform = t;
                    s.style.webkitTransform = t;
                    s.style.opacity = `${opacity}`;
                    s.style.filter = `blur(${blur}px)`;
                    s.style.webkitFilter = `blur(${blur}px)`;
                }
            });
        }

        window.addEventListener('load', () => {
            slides = Array.from(document.querySelectorAll('.slide'));
            slides.forEach(s => s.style.transition = 'none');
            void slider.offsetWidth; // reflow
            applyStack();
        });

        let isAnimating = false;

        function rotateSlides() {
            if (isAnimating) return;

            // If user prefers reduced motion — do a simple fade rotation without 3D pushes
            if (reduceMotion) {
                fadeRotate();
                return;
            }

            isAnimating = true;
            slides = Array.from(document.querySelectorAll('.slide'));
            const first = slides[0];
            if (!first) { isAnimating = false; return; }

            // push forward visually using translate3d Z and small xy offset,
            // using smaller Z on narrow screens to avoid clipping
            const screenNarrow = window.innerWidth <= 480;
            const zForward = screenNarrow ? 60 : 120;

            first.style.transition = TRANSITION;
            first.style.webkitTransition = TRANSITION;

            // move slightly forward in Z and vanish — smoother than instant appear
            const forwardTransform = `translate3d(20px, -20px, ${zForward}px) scale(1.06) rotateY(8deg) rotateX(-4deg)`;
            first.style.transform = forwardTransform;
            first.style.webkitTransform = forwardTransform;
            first.style.opacity = '0';
            first.style.filter = 'blur(0px)';
            first.style.webkitFilter = 'blur(0px)';

            const ANIM_OUT_MS = 920; // slightly above transition duration
            setTimeout(() => {
                // move DOM element to end (it's off/transparent now)
                slider.appendChild(first);
                slides = Array.from(document.querySelectorAll('.slide'));
                const last = slides[slides.length - 1];

                // remove transition so we can set its "back" starting pos instantly
                last.style.transition = 'none';
                last.style.webkitTransition = 'none';

                const i = slides.length - 1;
                const tx = -OFFSET_X * i;
                const ty = -OFFSET_Y * i;
                const scale = 1 - i * SCALE_STEP;
                const ry = -ROT_Y_STEP * i;
                const rx = ROT_X_STEP * i;
                const blur = BLUR_STEP * i;

                // set its back position and keep it invisible initially
                const backT = `translate3d(${tx}px, ${ty}px, 0px) scale(${scale}) rotateY(${ry}deg) rotateX(${rx}deg)`;
                last.style.transform = backT;
                last.style.webkitTransform = backT;
                last.style.opacity = '0';
                last.style.filter = `blur(${blur}px)`;
                last.style.webkitFilter = `blur(${blur}px)`;

                // force reflow then animate stack to new state (which will fade the last in)
                void last.offsetWidth;
                applyStack();

                setTimeout(() => { isAnimating = false; }, 950);
            }, ANIM_OUT_MS);
        }

        // Simple fade fallback (for prefers-reduced-motion)
        function fadeRotate() {
            if (isAnimating) return;
            isAnimating = true;
            slides = Array.from(document.querySelectorAll('.slide'));
            const first = slides[0];
            if (!first) { isAnimating = false; return; }

            first.style.transition = 'opacity 600ms ease';
            first.style.opacity = '0';

            setTimeout(() => {
                slider.appendChild(first);
                slides = Array.from(document.querySelectorAll('.slide'));
                slides.forEach(s => {
                    s.style.transition = 'opacity 600ms ease';
                    s.style.opacity = '1';
                });
                setTimeout(() => isAnimating = false, 650);
            }, 650);
        }

        const INTERVAL = 3000;
        let auto = setInterval(rotateSlides, INTERVAL);

        // Optional: stop auto-rotate on touchstart to avoid unexpected movement on mobile
        slider.addEventListener('touchstart', () => {
            clearInterval(auto);
            // restart after a short delay to avoid aggressive auto-rotate during interaction
            setTimeout(() => { auto = setInterval(rotateSlides, INTERVAL); }, 2000);
        });
    </script>
</body>
</html>
