<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>What Bird</title>
  <link rel="icon" type="image/png" href="/assets/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/assets/favicon.svg" />
  <link rel="shortcut icon" href="/assets/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png" />
  <link rel="manifest" href="/assets/site.webmanifest" />
  <style>
    * { margin:0; padding:0; box-sizing:border-box; }

    body {
      font-family: -apple-system, BlinkMacSystemFont, "SF Pro Display", "SF Pro Text", system-ui, sans-serif;
      background: #fff; min-height:100vh;
    }

    .header { background:#1a472a; width:100%; padding:20px 0; z-index:10; position:relative; }
    .container { max-width:1200px; margin:0 auto; padding:0 20px; }
    .nav { display:flex; justify-content:space-between; align-items:center; color:#fff; }
    .logo { font-size:33px; font-weight:600; letter-spacing:0.8px; }
    .nav-links { display:flex; gap:30px; }
    .nav-links a { color:#fff; text-decoration:none; font-size:16px; font-weight:400; transition:opacity .3s; }
    .nav-links a:hover { opacity:.8; }

    .main-content { display:flex; min-height:calc(100vh - 80px); align-items:center; }
    .left-section { flex:1; padding:60px 40px 60px 80px; display:flex; flex-direction:column; justify-content:center; }
    .right-section { flex:1; height:calc(100vh - 80px); position:relative; display:flex; align-items:center; justify-content:center; background:#fff; }

    .hero-title {
      font-size:4.5rem; font-weight:700; line-height:1.1; margin-bottom:30px;
      background:linear-gradient(135deg,#1a472a 0%,#2d5a3d 100%);
      -webkit-background-clip:text; -webkit-text-fill-color:transparent; background-clip:text;
    }
    .hero-subtitle { font-size:1.25rem; color:#666; line-height:1.6; margin-bottom:40px; max-width:500px; }

    .cta-button {
      background:linear-gradient(135deg,#1a472a 0%,#2d5a3d 100%); color:#fff; border:none;
      padding:16px 32px; font-size:1.1rem; font-weight:500; border-radius:12px; cursor:pointer;
      transition:all .3s; width:fit-content; box-shadow:0 4px 15px rgba(26,71,42,0.2);
    }
    .cta-button:hover { transform:translateY(-2px); box-shadow:0 8px 25px rgba(26,71,42,0.3); }

    /* ---------- Slider styles (desktop) ---------- */
    .slider {
      position:relative;
      width:80%;
      height:80%;
      perspective:1500px;
      -webkit-perspective:1500px;
      transform-style:preserve-3d;
      -webkit-transform-style:preserve-3d;
    }

    .slide {
      position:absolute;
      top:0; left:0;
      width:100%; height:100%;
      border-radius:20px;
      object-fit:cover; object-position:center;
      box-shadow:0 20px 40px rgba(0,0,0,0.1);
      will-change: transform, opacity;
      backface-visibility:hidden; -webkit-backface-visibility:hidden;
      transition: transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, filter 900ms ease;
      -webkit-transition: -webkit-transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, -webkit-filter 900ms ease;
      transform-origin:center center;
      -webkit-transform-origin:center center;
    }

    /* fallback positions if JS doesn't run */
    .slide:nth-child(1) { transform: translate3d(0,0,0) scale(1); z-index:5; opacity:1; filter:blur(0); }
    .slide:nth-child(2) { transform: translate3d(-30px,-30px,0) scale(.94) rotateY(-4deg) rotateX(3deg); z-index:4; opacity:.9; filter:blur(2px); }
    .slide:nth-child(3) { transform: translate3d(-60px,-60px,0) scale(.88) rotateY(-6deg) rotateX(4deg); z-index:3; opacity:.8; filter:blur(4px); }
    .slide:nth-child(4) { transform: translate3d(-90px,-90px,0) scale(.82) rotateY(-8deg) rotateX(5deg); z-index:2; opacity:.7; filter:blur(6px); }

    /* Mobile: we keep previous mobile simplifications (unchanged) */
    @media (max-width:768px) {
      .main-content { flex-direction:column; min-height:auto; }
      .left-section { padding:30px 20px; text-align:center; }
      .right-section { display:none; } /* hide desktop slider on mobile */
      .cta-button { display:block; margin:20px auto 0; }
      .nav-links a { font-family: system-ui, -apple-system, 'Segoe UI', Roboto, Arial, sans-serif; }
      .hero-title { font-size:2.8rem; } .hero-subtitle { font-size:1rem; max-width:none; }
      .slide { transition:none !important; transform:none !important; filter:none !important; opacity:0 !important; }
    }

    @media (max-width:480px) {
      .hero-title { font-size:2.2rem; }
      .left-section { padding:20px 15px; }
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="container">
      <nav class="nav">
        <div class="logo">What bird</div>
        <div class="nav-links">
          <a href="/">Chat</a>
          <a href="/about">About</a>
          <a href="/landing">Landing</a>
        </div>
      </nav>
    </div>
  </header>

  <main class="main-content">
    <section class="left-section">
      <h1 class="hero-title">Explore the beauty of nature</h1>
      <p class="hero-subtitle">Brand new AI tool aims to make bird recognition fast, easy, and fun</p>
      <button class="cta-button" onclick="window.location.href='/'">Start Exploring</button>
      <!-- optional mobile image kept in original layout if needed by your mobile rules -->
      <img src="/assets/puffins.jpg" alt="Puffins" style="display:none" id="mobile-cover" />
    </section>

    <section class="right-section">
      <div class="slider" aria-hidden="false">
        <img src="/assets/puffins.jpg" class="slide" alt="slide1">
        <img src="/assets/photo2.jpg" class="slide" alt="slide2">
        <img src="/assets/photo3.jpg" class="slide" alt="slide3">
        <img src="/assets/photo4.jpg" class="slide" alt="slide4">
      </div>
    </section>
  </main>

  <script>
    (function(){
      const slider = document.querySelector('.slider');
      let slides = Array.from(document.querySelectorAll('.slide'));

      const isMobile = ('ontouchstart' in window) || window.innerWidth <= 768;
      const prefersReduced = window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

      // If mobile or reduced-motion -> do not run desktop animation
      if (isMobile || prefersReduced) {
        if (slider) slider.style.display = 'none';
        const mobileCover = document.getElementById('mobile-cover');
        if (mobileCover) mobileCover.style.display = 'block';
        return;
      }

      // Parameters
      const OFFSET_X = 30;
      const OFFSET_Y = 30;
      const SCALE_STEP = 0.06;
      const ROT_Y_STEP = 2;
      const ROT_X_STEP = 1;
      const BLUR_STEP = 2;
      const OPACITY_STEP = 0.08;
      const TRANSITION = 'transform 900ms cubic-bezier(.22,1,.36,1), opacity 900ms ease, filter 900ms ease';

      // applyStack uses translate3d and sets -webkitTransform too for Safari
      function applyStack() {
        slides = Array.from(document.querySelectorAll('.slide'));
        slides.forEach((s, i) => {
          s.style.transition = TRANSITION;
          s.style.webkitTransition = TRANSITION;
          // Explicitly set zIndex to control stacking order reliably
          s.style.zIndex = slides.length - i;
          if (i === 0) {
            const t = 'translate3d(0px, 0px, 0px) scale(1) rotateY(0deg) rotateX(0deg)';
            s.style.transform = t; s.style.webkitTransform = t;
            s.style.opacity = '1'; s.style.filter = 'blur(0px)'; s.style.webkitFilter = 'blur(0px)';
            s.style.backfaceVisibility = 'hidden'; s.style.webkitBackfaceVisibility = 'hidden';
          } else {
            const tx = -OFFSET_X * i;
            const ty = -OFFSET_Y * i;
            const sc = 1 - i * SCALE_STEP;
            const ry = -ROT_Y_STEP * i;
            const rx = ROT_X_STEP * i;
            const bl = BLUR_STEP * i;
            const op = Math.max(0, 1 - i * OPACITY_STEP);
            const t = `translate3d(${tx}px, ${ty}px, 0px) scale(${sc}) rotateY(${ry}deg) rotateX(${rx}deg)`;
            s.style.transform = t; s.style.webkitTransform = t;
            s.style.opacity = `${op}`; s.style.filter = `blur(${bl}px)`; s.style.webkitFilter = `blur(${bl}px)`;
            s.style.backfaceVisibility = 'hidden'; s.style.webkitBackfaceVisibility = 'hidden';
          }
        });
      }

      // initial setup (remove transitions to prevent jump)
      window.addEventListener('load', () => {
        slides = Array.from(document.querySelectorAll('.slide'));
        slides.forEach(s => s.style.transition = 'none');
        // force reflow
        void slider.offsetWidth;
        applyStack();
      });

      let isAnimating = false;

      function rotateSlides() {
        if (isAnimating) return;
        isAnimating = true;

        slides = Array.from(document.querySelectorAll('.slide'));
        const first = slides[0];
        if (!first) { isAnimating = false; return; }

        // Ensure this element visually on top across browsers while animating
        // (important for Safari compositing behaviour)
        first.style.zIndex = 9999;

        // Use translate3d (and -webkitTransform) to push forward smoothly
        const screenNarrow = window.innerWidth <= 1024; // slightly adjust forward amount for smaller desktop windows
        const zForward = screenNarrow ? 80 : 120;
        const forwardTransform = `translate3d(20px, -20px, ${zForward}px) scale(1.06) rotateY(8deg) rotateX(-4deg)`;

        first.style.transition = TRANSITION;
        first.style.webkitTransition = TRANSITION;
        first.style.transform = forwardTransform;
        first.style.webkitTransform = forwardTransform;
        first.style.opacity = '0';
        first.style.filter = 'blur(0px)';
        first.style.webkitFilter = 'blur(0px)';
        first.style.backfaceVisibility = 'hidden'; first.style.webkitBackfaceVisibility = 'hidden';

        const ANIM_OUT_MS = 920;
        setTimeout(() => {
          // Move DOM node to end (it is already transparent)
          slider.appendChild(first);

          // Recompute slides array and reset the moved element into back position instantly
          slides = Array.from(document.querySelectorAll('.slide'));
          const last = slides[slides.length - 1];

          // Remove transition while setting back position
          last.style.transition = 'none'; last.style.webkitTransition = 'none';

          const i = slides.length - 1;
          const tx = -OFFSET_X * i;
          const ty = -OFFSET_Y * i;
          const sc = 1 - i * SCALE_STEP;
          const ry = -ROT_Y_STEP * i;
          const rx = ROT_X_STEP * i;
          const bl = BLUR_STEP * i;

          const backT = `translate3d(${tx}px, ${ty}px, 0px) scale(${sc}) rotateY(${ry}deg) rotateX(${rx}deg)`;
          last.style.transform = backT; last.style.webkitTransform = backT;
          last.style.opacity = '0';
          last.style.filter = `blur(${bl}px)`; last.style.webkitFilter = `blur(${bl}px)`;
          last.style.backfaceVisibility = 'hidden'; last.style.webkitBackfaceVisibility = 'hidden';

          // Force reflow so the instant position is registered, then animate stack to new state
          void last.offsetWidth;
          applyStack();

          // after stack settled, restore normal z-indexes (applyStack sets zIndex properly)
          setTimeout(() => {
            isAnimating = false;
          }, 950);
        }, ANIM_OUT_MS);
      }

      // Start auto-rotate
      setInterval(rotateSlides, 3000);

      // Optional: pause on hover for desktop usability
      slider.addEventListener('mouseenter', () => { /* optional: pause */ });
      slider.addEventListener('mouseleave', () => { /* optional: resume */ });
    })();
  </script>
</body>
</html>
